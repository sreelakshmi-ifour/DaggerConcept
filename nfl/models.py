# Â© Kyle Olson/Future Trick 2023
from django.db import models
from enum import Enum



####NON GENERATED FIELDS ######

class Agent(models.Model):
    ID = models.AutoField(primary_key=True)
    Name = models.CharField(max_length=50)
    


class Contract(models.Model):
    ID = models.AutoField(primary_key=True)
    PlayerId = models.IntegerField()
    ContractDate = models.DateField()
    AgentId = models.IntegerField()
    SignBon = models.IntegerField()
    OATSB = models.IntegerField()
    OptBon = models.IntegerField() 
    OptBon2nd = models.IntegerField()
    APY = models.IntegerField()
    APY3 = models.IntegerField()
    APY4 = models.IntegerField()
    APY5 = models.IntegerField()
    CashValue = models.IntegerField()
    Guarantee = models.IntegerField()
    OptionYear = models.IntegerField()
    OptionExerciseYear = models.IntegerField()
    FirstVoidableYear  = models.IntegerField()
        
class ContractYear(models.Model):
    ID = models.AutoField(primary_key=True)
    ContractId = models.ForeignKey(Contract, on_delete=models.CASCADE)
    Year = models.IntegerField()
    BaseSalary = models.IntegerField()
    SplitSalary = models.IntegerField()
    ProratedAmount = models.IntegerField()
    RosterBonus = models.IntegerField()
    RosterBonusPerGame = models.IntegerField()
    ReportingBonus = models.IntegerField()
    WorkoutBonus = models.IntegerField()
    TotalLBTEs = models.IntegerField()
    TotalNLBTEs = models.IntegerField()
    Other = models.IntegerField()
    CapNumber = models.IntegerField()
    CashNumber = models.IntegerField()
    CashRunningTotal = models.IntegerField()
    Comment = models.CharField(max_length=300)

### GENERATED FIELDS, WITH MODIFICATIONS ####

#Comments added based on changes from Generated items


class Timeframe(models.Model):
    #Making Key From Parts. There are other options, but w/Django this seems best. These fiel
    SeasonKey = models.IntegerField(primary_key=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Week = models.IntegerField(null=True)
    Name = models.CharField(max_length=50)
    ShortName = models.CharField(max_length=50)
    StartDate = models.DateTimeField()
    EndDate = models.DateTimeField()
    FirstGameStart = models.DateTimeField(null=True)
    FirstGameEnd = models.DateTimeField(null=True)
    LastGameEnd = models.DateTimeField(null=True)
    HasGames = models.BooleanField()
    HasStarted = models.BooleanField()
    HasEnded = models.BooleanField()
    HasFirstGameStarted = models.BooleanField()
    HasFirstGameEnded = models.BooleanField()
    HasLastGameEnded = models.BooleanField()
    ApiSeason = models.CharField(max_length=10, null=True, blank=True)
    ApiWeek = models.CharField(max_length=10, null=True, blank=True)

class Team(models.Model):
    Key = models.CharField(max_length=50)
    TeamID = models.IntegerField(primary_key=True) #making primary key team name
    PlayerID = models.IntegerField()
    City = models.CharField(max_length=50)
    Name = models.CharField(max_length=50)
    Conference = models.CharField(max_length=50, null=True, blank=True)
    Division = models.CharField(max_length=50, null=True, blank=True)
    FullName = models.CharField(max_length=50, null=True, blank=True)
    StadiumID = models.IntegerField(null=True)
    ByeWeek = models.IntegerField(null=True)
    AverageDraftPosition = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AverageDraftPositionPPR = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    HeadCoach = models.CharField(max_length=50, null=True, blank=True)
    OffensiveCoordinator = models.CharField(max_length=50, null=True, blank=True)
    DefensiveCoordinator = models.CharField(max_length=50, null=True, blank=True)
    SpecialTeamsCoach = models.CharField(max_length=50, null=True, blank=True)
    OffensiveScheme = models.CharField(max_length=10, null=True, blank=True)
    DefensiveScheme = models.CharField(max_length=10, null=True, blank=True)
    UpcomingSalary = models.IntegerField(null=True)
    UpcomingOpponent = models.CharField(max_length=10, null=True, blank=True)
    UpcomingOpponentRank = models.IntegerField(null=True)
    UpcomingOpponentPositionRank = models.IntegerField(null=True)
    UpcomingFanDuelSalary = models.IntegerField(null=True)
    UpcomingDraftKingsSalary = models.IntegerField(null=True)
    UpcomingYahooSalary = models.IntegerField(null=True)
    PrimaryColor = models.CharField(max_length=6, null=True, blank=True)
    SecondaryColor = models.CharField(max_length=6, null=True, blank=True)
    TertiaryColor = models.CharField(max_length=6, null=True, blank=True)
    QuaternaryColor = models.CharField(max_length=6, null=True, blank=True)
    WikipediaLogoUrl = models.CharField(max_length=250, null=True, blank=True)
    WikipediaWordMarkUrl = models.CharField(max_length=250, null=True, blank=True)
    GlobalTeamID = models.IntegerField(null=True)
    DraftKingsName = models.CharField(max_length=50, null=True, blank=True)
    DraftKingsPlayerID = models.IntegerField(null=True)
    FanDuelName = models.CharField(max_length=50, null=True, blank=True)
    FanDuelPlayerID = models.IntegerField(null=True)
    FantasyDraftName = models.CharField(max_length=50, null=True, blank=True)
    FantasyDraftPlayerID = models.IntegerField(null=True)
    YahooName = models.CharField(max_length=50, null=True, blank=True)
    YahooPlayerID = models.IntegerField(null=True)
    StadiumDetails = models.IntegerField(null=True)
    AverageDraftPosition2QB = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AverageDraftPositionDynasty = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    class Meta:
        ordering = ['Key']
        indexes = [
            models.Index(fields=['Key']),
            models.Index(fields=['Name']),
        ]
    def __str__(self):
        return self.Name



class Stadium(models.Model):
    StadiumID = models.IntegerField(primary_key=True)
    Name = models.CharField(max_length=100)
    City = models.CharField(max_length=50)
    State = models.CharField(max_length=10, null=True, blank=True)
    Country = models.CharField(max_length=10)
    Capacity = models.IntegerField(null=True)
    PlayingSurface = models.CharField(max_length=50, null=True, blank=True)
    GeoLat = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    GeoLong = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Type = models.CharField(max_length=50, null=True, blank=True)
    class Meta:
        ordering = ['Name']
        indexes = [
            models.Index(fields=['Name']),
        ]
    def __str__(self):
        return self.Name

class Score(models.Model):
    GameKey = models.CharField(max_length=10, null=True, blank=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Week = models.IntegerField()
    Date = models.DateTimeField()
    AwayTeam = models.CharField(max_length=50, null=True, blank=True)
    HomeTeam = models.CharField(max_length=50, null=True, blank=True)
    AwayScore = models.IntegerField(null=True)
    HomeScore = models.IntegerField(null=True)
    Channel = models.CharField(max_length=50, null=True, blank=True)
    PointSpread = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OverUnder = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Quarter = models.CharField(max_length=50, null=True, blank=True)
    TimeRemaining = models.CharField(max_length=50, null=True, blank=True)
    Possession = models.CharField(max_length=50, null=True, blank=True)
    Down = models.IntegerField(null=True)
    Distance = models.CharField(max_length=10, null=True, blank=True)
    YardLine = models.IntegerField(null=True)
    YardLineTerritory = models.CharField(max_length=10, null=True, blank=True)
    RedZone = models.CharField(max_length=10, null=True, blank=True)
    AwayScoreQuarter1 = models.IntegerField(null=True)
    AwayScoreQuarter2 = models.IntegerField(null=True)
    AwayScoreQuarter3 = models.IntegerField(null=True)
    AwayScoreQuarter4 = models.IntegerField(null=True)
    AwayScoreOvertime = models.IntegerField(null=True)
    HomeScoreQuarter1 = models.IntegerField(null=True)
    HomeScoreQuarter2 = models.IntegerField(null=True)
    HomeScoreQuarter3 = models.IntegerField(null=True)
    HomeScoreQuarter4 = models.IntegerField(null=True)
    HomeScoreOvertime = models.IntegerField(null=True)
    HasStarted = models.BooleanField()
    IsInProgress = models.BooleanField()
    IsOver = models.BooleanField()
    Has1stQuarterStarted = models.BooleanField()
    Has2ndQuarterStarted = models.BooleanField()
    Has3rdQuarterStarted = models.BooleanField()
    Has4thQuarterStarted = models.BooleanField()
    IsOvertime = models.BooleanField()
    DownAndDistance = models.CharField(max_length=50, null=True, blank=True)
    QuarterDescription = models.CharField(max_length=50, null=True, blank=True)
    StadiumID = models.IntegerField(null=True)
    LastUpdated = models.DateTimeField(null=True)
    GeoLat = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    GeoLong = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ForecastTempLow = models.IntegerField(null=True)
    ForecastTempHigh = models.IntegerField(null=True)
    ForecastDescription = models.CharField(max_length=50, null=True, blank=True)
    ForecastWindChill = models.IntegerField(null=True)
    ForecastWindSpeed = models.IntegerField(null=True)
    AwayTeamMoneyLine = models.IntegerField(null=True)
    HomeTeamMoneyLine = models.IntegerField(null=True)
    Canceled = models.BooleanField(null=True)
    Closed = models.BooleanField(null=True)
    LastPlay = models.CharField(max_length=250, null=True, blank=True)
    Day = models.DateField(null=True)
    DateTime = models.DateTimeField(null=True)
    AwayTeamID = models.IntegerField(null=True)
    HomeTeamID = models.IntegerField(null=True)
    GlobalGameID = models.IntegerField(null=True)
    GlobalAwayTeamID = models.IntegerField(null=True)
    GlobalHomeTeamID = models.IntegerField(null=True)
    PointSpreadAwayTeamMoneyLine = models.IntegerField(null=True)
    PointSpreadHomeTeamMoneyLine = models.IntegerField(null=True)
    ScoreID = models.IntegerField(primary_key=True)
    StadiumDetails = models.IntegerField(null=True)
    Status = models.CharField(max_length=20, null=True, blank=True)
    GameEndDateTime = models.DateTimeField(null=True)
    HomeRotationNumber = models.IntegerField(null=True)
    AwayRotationNumber = models.IntegerField(null=True)
    NeutralVenue = models.BooleanField(null=True)
    RefereeID = models.IntegerField(null=True)
    OverPayout = models.IntegerField(null=True)
    UnderPayout = models.IntegerField(null=True)
    HomeTimeouts = models.IntegerField(null=True)
    AwayTimeouts = models.IntegerField(null=True)
    DateTimeUTC = models.DateTimeField(null=True)
    Attendance = models.IntegerField()
    IsClosed = models.BooleanField(null=True)


class Schedule(models.Model):
    # Key chosen, GameKey represents game for both teams
    GameKey = models.CharField(max_length=10, primary_key=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Week = models.IntegerField()
    Date = models.DateTimeField(null=True)
    AwayTeam = models.CharField(max_length=50, null=True, blank=True)
    HomeTeam = models.CharField(max_length=50, null=True, blank=True)
    Channel = models.CharField(max_length=50, null=True, blank=True)
    PointSpread = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OverUnder = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    StadiumID = models.IntegerField(null=True)
    Canceled = models.BooleanField(null=True)
    GeoLat = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    GeoLong = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ForecastTempLow = models.IntegerField(null=True)
    ForecastTempHigh = models.IntegerField(null=True)
    ForecastDescription = models.CharField(max_length=50, null=True, blank=True)
    ForecastWindChill = models.IntegerField(null=True)
    ForecastWindSpeed = models.IntegerField(null=True)
    AwayTeamMoneyLine = models.IntegerField(null=True)
    HomeTeamMoneyLine = models.IntegerField(null=True)
    Day = models.DateField(null=True)
    DateTime = models.DateTimeField(null=True)
    GlobalGameID = models.IntegerField(null=True)
    GlobalAwayTeamID = models.IntegerField(null=True)
    GlobalHomeTeamID = models.IntegerField(null=True)
    ScoreID = models.IntegerField()
    StadiumDetails = models.IntegerField(null=True)
    Status = models.CharField(max_length=20, null=True, blank=True)
    IsClosed = models.BooleanField(null=True)



class TeamGame(models.Model):
    TeamGameID = models.IntegerField(primary_key=True)
    GameKey = models.CharField(max_length=10)
    Date = models.DateTimeField(null=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Week = models.IntegerField(null=True)
    Team = models.CharField(max_length=50, null=True, blank=True)
    Opponent = models.CharField(max_length=50, null=True, blank=True)
    HomeOrAway = models.CharField(max_length=4, null=True, blank=True)
    Score = models.IntegerField()
    OpponentScore = models.IntegerField()
    TotalScore = models.IntegerField()
    Stadium = models.CharField(max_length=50, null=True, blank=True)
    PlayingSurface = models.CharField(max_length=50, null=True, blank=True)
    Temperature = models.IntegerField(null=True)
    Humidity = models.IntegerField(null=True)
    WindSpeed = models.IntegerField(null=True)
    OverUnder = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PointSpread = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ScoreQuarter1 = models.IntegerField(null=True)
    ScoreQuarter2 = models.IntegerField(null=True)
    ScoreQuarter3 = models.IntegerField(null=True)
    ScoreQuarter4 = models.IntegerField(null=True)
    ScoreOvertime = models.IntegerField()
    TimeOfPossessionMinutes = models.IntegerField(null=True)
    TimeOfPossessionSeconds = models.IntegerField(null=True)
    TimeOfPossession = models.CharField(max_length=50, null=True, blank=True)
    FirstDowns = models.IntegerField(null=True)
    FirstDownsByRushing = models.IntegerField(null=True)
    FirstDownsByPassing = models.IntegerField(null=True)
    FirstDownsByPenalty = models.IntegerField(null=True)
    OffensivePlays = models.IntegerField()
    OffensiveYards = models.IntegerField()
    OffensiveYardsPerPlay = models.DecimalField(max_digits=10, decimal_places=2)
    Touchdowns = models.IntegerField(null=True)
    RushingAttempts = models.IntegerField(null=True)
    RushingYards = models.IntegerField(null=True)
    RushingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    RushingTouchdowns = models.IntegerField(null=True)
    PassingAttempts = models.IntegerField(null=True)
    PassingCompletions = models.IntegerField(null=True)
    PassingYards = models.IntegerField(null=True)
    PassingTouchdowns = models.IntegerField(null=True)
    PassingInterceptions = models.IntegerField(null=True)
    PassingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYardsPerCompletion = models.DecimalField(max_digits=10, decimal_places=2)
    CompletionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    PasserRating = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ThirdDownAttempts = models.IntegerField(null=True)
    ThirdDownConversions = models.IntegerField(null=True)
    ThirdDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FourthDownAttempts = models.IntegerField(null=True)
    FourthDownConversions = models.IntegerField(null=True)
    FourthDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    RedZoneAttempts = models.IntegerField(null=True)
    RedZoneConversions = models.IntegerField(null=True)
    GoalToGoAttempts = models.IntegerField(null=True)
    GoalToGoConversions = models.IntegerField(null=True)
    ReturnYards = models.IntegerField(null=True)
    Penalties = models.IntegerField(null=True)
    PenaltyYards = models.IntegerField(null=True)
    Fumbles = models.IntegerField(null=True)
    FumblesLost = models.IntegerField(null=True)
    TimesSacked = models.IntegerField(null=True)
    TimesSackedYards = models.IntegerField(null=True)
    QuarterbackHits = models.IntegerField(null=True)
    TacklesForLoss = models.IntegerField(null=True)
    Safeties = models.IntegerField(null=True)
    Punts = models.IntegerField(null=True)
    PuntYards = models.IntegerField(null=True)
    PuntAverage = models.DecimalField(max_digits=10, decimal_places=2)
    Giveaways = models.IntegerField()
    Takeaways = models.IntegerField()
    TurnoverDifferential = models.IntegerField()
    OpponentScoreQuarter1 = models.IntegerField(null=True)
    OpponentScoreQuarter2 = models.IntegerField(null=True)
    OpponentScoreQuarter3 = models.IntegerField(null=True)
    OpponentScoreQuarter4 = models.IntegerField(null=True)
    OpponentScoreOvertime = models.IntegerField()
    OpponentTimeOfPossessionMinutes = models.IntegerField(null=True)
    OpponentTimeOfPossessionSeconds = models.IntegerField(null=True)
    OpponentTimeOfPossession = models.CharField(max_length=50, null=True, blank=True)
    OpponentFirstDowns = models.IntegerField(null=True)
    OpponentFirstDownsByRushing = models.IntegerField(null=True)
    OpponentFirstDownsByPassing = models.IntegerField(null=True)
    OpponentFirstDownsByPenalty = models.IntegerField(null=True)
    OpponentOffensivePlays = models.IntegerField()
    OpponentOffensiveYards = models.IntegerField()
    OpponentOffensiveYardsPerPlay = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentTouchdowns = models.IntegerField(null=True)
    OpponentRushingAttempts = models.IntegerField(null=True)
    OpponentRushingYards = models.IntegerField(null=True)
    OpponentRushingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentRushingTouchdowns = models.IntegerField(null=True)
    OpponentPassingAttempts = models.IntegerField(null=True)
    OpponentPassingCompletions = models.IntegerField(null=True)
    OpponentPassingYards = models.IntegerField(null=True)
    OpponentPassingTouchdowns = models.IntegerField(null=True)
    OpponentPassingInterceptions = models.IntegerField(null=True)
    OpponentPassingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentPassingYardsPerCompletion = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentCompletionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentPasserRating = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentThirdDownAttempts = models.IntegerField(null=True)
    OpponentThirdDownConversions = models.IntegerField(null=True)
    OpponentThirdDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentFourthDownAttempts = models.IntegerField(null=True)
    OpponentFourthDownConversions = models.IntegerField(null=True)
    OpponentFourthDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentRedZoneAttempts = models.IntegerField(null=True)
    OpponentRedZoneConversions = models.IntegerField(null=True)
    OpponentGoalToGoAttempts = models.IntegerField(null=True)
    OpponentGoalToGoConversions = models.IntegerField(null=True)
    OpponentReturnYards = models.IntegerField(null=True)
    OpponentPenalties = models.IntegerField(null=True)
    OpponentPenaltyYards = models.IntegerField(null=True)
    OpponentFumbles = models.IntegerField(null=True)
    OpponentFumblesLost = models.IntegerField(null=True)
    OpponentTimesSacked = models.IntegerField(null=True)
    OpponentTimesSackedYards = models.IntegerField(null=True)
    OpponentQuarterbackHits = models.IntegerField(null=True)
    OpponentTacklesForLoss = models.IntegerField(null=True)
    OpponentSafeties = models.IntegerField(null=True)
    OpponentPunts = models.IntegerField(null=True)
    OpponentPuntYards = models.IntegerField(null=True)
    OpponentPuntAverage = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentGiveaways = models.IntegerField()
    OpponentTakeaways = models.IntegerField()
    OpponentTurnoverDifferential = models.IntegerField()
    RedZonePercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    GoalToGoPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    QuarterbackHitsDifferential = models.IntegerField(null=True)
    TacklesForLossDifferential = models.IntegerField(null=True)
    QuarterbackSacksDifferential = models.IntegerField()
    TacklesForLossPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    QuarterbackHitsPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    TimesSackedPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentRedZonePercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentGoalToGoPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentQuarterbackHitsDifferential = models.IntegerField(null=True)
    OpponentTacklesForLossDifferential = models.IntegerField(null=True)
    OpponentQuarterbackSacksDifferential = models.IntegerField(null=True)
    OpponentTacklesForLossPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentQuarterbackHitsPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentTimesSackedPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    Kickoffs = models.IntegerField(null=True)
    KickoffsInEndZone = models.IntegerField(null=True)
    KickoffTouchbacks = models.IntegerField(null=True)
    PuntsHadBlocked = models.IntegerField(null=True)
    PuntNetAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointKickingAttempts = models.IntegerField(null=True)
    ExtraPointKickingConversions = models.IntegerField(null=True)
    ExtraPointsHadBlocked = models.IntegerField(null=True)
    ExtraPointPassingAttempts = models.IntegerField(null=True)
    ExtraPointPassingConversions = models.IntegerField(null=True)
    ExtraPointRushingAttempts = models.IntegerField(null=True)
    ExtraPointRushingConversions = models.IntegerField(null=True)
    FieldGoalAttempts = models.IntegerField(null=True)
    FieldGoalsMade = models.IntegerField(null=True)
    FieldGoalsHadBlocked = models.IntegerField(null=True)
    PuntReturns = models.IntegerField(null=True)
    PuntReturnYards = models.IntegerField(null=True)
    KickReturns = models.IntegerField(null=True)
    KickReturnYards = models.IntegerField(null=True)
    InterceptionReturns = models.IntegerField(null=True)
    InterceptionReturnYards = models.IntegerField(null=True)
    OpponentKickoffs = models.IntegerField(null=True)
    OpponentKickoffsInEndZone = models.IntegerField(null=True)
    OpponentKickoffTouchbacks = models.IntegerField(null=True)
    OpponentPuntsHadBlocked = models.IntegerField(null=True)
    OpponentPuntNetAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentExtraPointKickingAttempts = models.IntegerField(null=True)
    OpponentExtraPointKickingConversions = models.IntegerField(null=True)
    OpponentExtraPointsHadBlocked = models.IntegerField(null=True)
    OpponentExtraPointPassingAttempts = models.IntegerField(null=True)
    OpponentExtraPointPassingConversions = models.IntegerField(null=True)
    OpponentExtraPointRushingAttempts = models.IntegerField(null=True)
    OpponentExtraPointRushingConversions = models.IntegerField(null=True)
    OpponentFieldGoalAttempts = models.IntegerField(null=True)
    OpponentFieldGoalsMade = models.IntegerField(null=True)
    OpponentFieldGoalsHadBlocked = models.IntegerField(null=True)
    OpponentPuntReturns = models.IntegerField(null=True)
    OpponentPuntReturnYards = models.IntegerField(null=True)
    OpponentKickReturns = models.IntegerField(null=True)
    OpponentKickReturnYards = models.IntegerField(null=True)
    OpponentInterceptionReturns = models.IntegerField(null=True)
    OpponentInterceptionReturnYards = models.IntegerField(null=True)
    SoloTackles = models.IntegerField(null=True)
    AssistedTackles = models.IntegerField(null=True)
    Sacks = models.IntegerField(null=True)
    SackYards = models.IntegerField(null=True)
    PassesDefended = models.IntegerField(null=True)
    FumblesForced = models.IntegerField(null=True)
    FumblesRecovered = models.IntegerField(null=True)
    FumbleReturnYards = models.IntegerField(null=True)
    FumbleReturnTouchdowns = models.IntegerField(null=True)
    InterceptionReturnTouchdowns = models.IntegerField(null=True)
    BlockedKicks = models.IntegerField(null=True)
    PuntReturnTouchdowns = models.IntegerField(null=True)
    PuntReturnLong = models.IntegerField(null=True)
    KickReturnTouchdowns = models.IntegerField(null=True)
    KickReturnLong = models.IntegerField(null=True)
    BlockedKickReturnYards = models.IntegerField(null=True)
    BlockedKickReturnTouchdowns = models.IntegerField(null=True)
    FieldGoalReturnYards = models.IntegerField(null=True)
    FieldGoalReturnTouchdowns = models.IntegerField(null=True)
    PuntNetYards = models.IntegerField(null=True)
    OpponentSoloTackles = models.IntegerField(null=True)
    OpponentAssistedTackles = models.IntegerField(null=True)
    OpponentSacks = models.IntegerField(null=True)
    OpponentSackYards = models.IntegerField(null=True)
    OpponentPassesDefended = models.IntegerField(null=True)
    OpponentFumblesForced = models.IntegerField(null=True)
    OpponentFumblesRecovered = models.IntegerField(null=True)
    OpponentFumbleReturnYards = models.IntegerField(null=True)
    OpponentFumbleReturnTouchdowns = models.IntegerField(null=True)
    OpponentInterceptionReturnTouchdowns = models.IntegerField(null=True)
    OpponentBlockedKicks = models.IntegerField(null=True)
    OpponentPuntReturnTouchdowns = models.IntegerField(null=True)
    OpponentPuntReturnLong = models.IntegerField(null=True)
    OpponentKickReturnTouchdowns = models.IntegerField(null=True)
    OpponentKickReturnLong = models.IntegerField(null=True)
    OpponentBlockedKickReturnYards = models.IntegerField(null=True)
    OpponentBlockedKickReturnTouchdowns = models.IntegerField(null=True)
    OpponentFieldGoalReturnYards = models.IntegerField(null=True)
    OpponentFieldGoalReturnTouchdowns = models.IntegerField(null=True)
    OpponentPuntNetYards = models.IntegerField(null=True)
    IsGameOver = models.BooleanField(null=True)
    TeamName = models.CharField(max_length=50, null=True, blank=True)
    DayOfWeek = models.CharField(max_length=50, null=True, blank=True)
    PassingDropbacks = models.IntegerField(null=True)
    OpponentPassingDropbacks = models.IntegerField(null=True)
    PointDifferential = models.IntegerField(null=True)
    PassingInterceptionPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    KickReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentPassingInterceptionPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentPuntReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentKickReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentExtraPointPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentFieldGoalPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PenaltyYardDifferential = models.IntegerField(null=True)
    PuntReturnYardDifferential = models.IntegerField(null=True)
    KickReturnYardDifferential = models.IntegerField(null=True)
    TwoPointConversionReturns = models.IntegerField(null=True)
    OpponentTwoPointConversionReturns = models.IntegerField(null=True)
    TeamID = models.IntegerField(null=True)
    OpponentID = models.IntegerField(null=True)
    Day = models.DateField(null=True)
    DateTime = models.DateTimeField(null=True)
    GlobalGameID = models.IntegerField(null=True)
    GlobalTeamID = models.IntegerField(null=True)
    GlobalOpponentID = models.IntegerField(null=True)
    ScoreID = models.IntegerField()

class TeamSeason(models.Model):
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Team = models.CharField(max_length=50, null=True, blank=True)
    Score = models.IntegerField()
    OpponentScore = models.IntegerField()
    TotalScore = models.IntegerField()
    Temperature = models.IntegerField(null=True)
    Humidity = models.IntegerField(null=True)
    WindSpeed = models.IntegerField(null=True)
    OverUnder = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PointSpread = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ScoreQuarter1 = models.IntegerField(null=True)
    ScoreQuarter2 = models.IntegerField(null=True)
    ScoreQuarter3 = models.IntegerField(null=True)
    ScoreQuarter4 = models.IntegerField(null=True)
    ScoreOvertime = models.IntegerField()
    TimeOfPossession = models.CharField(max_length=50, null=True, blank=True)
    FirstDowns = models.IntegerField(null=True)
    FirstDownsByRushing = models.IntegerField(null=True)
    FirstDownsByPassing = models.IntegerField(null=True)
    FirstDownsByPenalty = models.IntegerField(null=True)
    OffensivePlays = models.IntegerField()
    OffensiveYards = models.IntegerField()
    OffensiveYardsPerPlay = models.DecimalField(max_digits=10, decimal_places=2)
    Touchdowns = models.IntegerField(null=True)
    RushingAttempts = models.IntegerField(null=True)
    RushingYards = models.IntegerField(null=True)
    RushingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    RushingTouchdowns = models.IntegerField(null=True)
    PassingAttempts = models.IntegerField(null=True)
    PassingCompletions = models.IntegerField(null=True)
    PassingYards = models.IntegerField(null=True)
    PassingTouchdowns = models.IntegerField(null=True)
    PassingInterceptions = models.IntegerField(null=True)
    PassingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYardsPerCompletion = models.DecimalField(max_digits=10, decimal_places=2)
    CompletionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    PasserRating = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ThirdDownAttempts = models.IntegerField(null=True)
    ThirdDownConversions = models.IntegerField(null=True)
    ThirdDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FourthDownAttempts = models.IntegerField(null=True)
    FourthDownConversions = models.IntegerField(null=True)
    FourthDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    RedZoneAttempts = models.IntegerField(null=True)
    RedZoneConversions = models.IntegerField(null=True)
    GoalToGoAttempts = models.IntegerField(null=True)
    GoalToGoConversions = models.IntegerField(null=True)
    ReturnYards = models.IntegerField(null=True)
    Penalties = models.IntegerField(null=True)
    PenaltyYards = models.IntegerField(null=True)
    Fumbles = models.IntegerField(null=True)
    FumblesLost = models.IntegerField(null=True)
    TimesSacked = models.IntegerField(null=True)
    TimesSackedYards = models.IntegerField(null=True)
    QuarterbackHits = models.IntegerField(null=True)
    TacklesForLoss = models.IntegerField(null=True)
    Safeties = models.IntegerField(null=True)
    Punts = models.IntegerField(null=True)
    PuntYards = models.IntegerField(null=True)
    PuntAverage = models.DecimalField(max_digits=10, decimal_places=2)
    Giveaways = models.IntegerField()
    Takeaways = models.IntegerField()
    TurnoverDifferential = models.IntegerField()
    OpponentScoreQuarter1 = models.IntegerField(null=True)
    OpponentScoreQuarter2 = models.IntegerField(null=True)
    OpponentScoreQuarter3 = models.IntegerField(null=True)
    OpponentScoreQuarter4 = models.IntegerField(null=True)
    OpponentScoreOvertime = models.IntegerField()
    OpponentTimeOfPossession = models.CharField(max_length=50, null=True, blank=True)
    OpponentFirstDowns = models.IntegerField(null=True)
    OpponentFirstDownsByRushing = models.IntegerField(null=True)
    OpponentFirstDownsByPassing = models.IntegerField(null=True)
    OpponentFirstDownsByPenalty = models.IntegerField(null=True)
    OpponentOffensivePlays = models.IntegerField()
    OpponentOffensiveYards = models.IntegerField()
    OpponentOffensiveYardsPerPlay = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentTouchdowns = models.IntegerField(null=True)
    OpponentRushingAttempts = models.IntegerField(null=True)
    OpponentRushingYards = models.IntegerField(null=True)
    OpponentRushingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentRushingTouchdowns = models.IntegerField(null=True)
    OpponentPassingAttempts = models.IntegerField(null=True)
    OpponentPassingCompletions = models.IntegerField(null=True)
    OpponentPassingYards = models.IntegerField(null=True)
    OpponentPassingTouchdowns = models.IntegerField(null=True)
    OpponentPassingInterceptions = models.IntegerField(null=True)
    OpponentPassingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentPassingYardsPerCompletion = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentCompletionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentPasserRating = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentThirdDownAttempts = models.IntegerField(null=True)
    OpponentThirdDownConversions = models.IntegerField(null=True)
    OpponentThirdDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentFourthDownAttempts = models.IntegerField(null=True)
    OpponentFourthDownConversions = models.IntegerField(null=True)
    OpponentFourthDownPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentRedZoneAttempts = models.IntegerField(null=True)
    OpponentRedZoneConversions = models.IntegerField(null=True)
    OpponentGoalToGoAttempts = models.IntegerField(null=True)
    OpponentGoalToGoConversions = models.IntegerField(null=True)
    OpponentReturnYards = models.IntegerField(null=True)
    OpponentPenalties = models.IntegerField(null=True)
    OpponentPenaltyYards = models.IntegerField(null=True)
    OpponentFumbles = models.IntegerField(null=True)
    OpponentFumblesLost = models.IntegerField(null=True)
    OpponentTimesSacked = models.IntegerField(null=True)
    OpponentTimesSackedYards = models.IntegerField(null=True)
    OpponentQuarterbackHits = models.IntegerField(null=True)
    OpponentTacklesForLoss = models.IntegerField(null=True)
    OpponentSafeties = models.IntegerField(null=True)
    OpponentPunts = models.IntegerField(null=True)
    OpponentPuntYards = models.IntegerField(null=True)
    OpponentPuntAverage = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentGiveaways = models.IntegerField()
    OpponentTakeaways = models.IntegerField()
    OpponentTurnoverDifferential = models.IntegerField()
    RedZonePercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    GoalToGoPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    QuarterbackHitsDifferential = models.IntegerField(null=True)
    TacklesForLossDifferential = models.IntegerField(null=True)
    QuarterbackSacksDifferential = models.IntegerField()
    TacklesForLossPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    QuarterbackHitsPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    TimesSackedPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    OpponentRedZonePercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentGoalToGoPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentQuarterbackHitsDifferential = models.IntegerField(null=True)
    OpponentTacklesForLossDifferential = models.IntegerField(null=True)
    OpponentQuarterbackSacksDifferential = models.IntegerField(null=True)
    OpponentTacklesForLossPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentQuarterbackHitsPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentTimesSackedPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    Kickoffs = models.IntegerField(null=True)
    KickoffsInEndZone = models.IntegerField(null=True)
    KickoffTouchbacks = models.IntegerField(null=True)
    PuntsHadBlocked = models.IntegerField(null=True)
    PuntNetAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointKickingAttempts = models.IntegerField(null=True)
    ExtraPointKickingConversions = models.IntegerField(null=True)
    ExtraPointsHadBlocked = models.IntegerField(null=True)
    ExtraPointPassingAttempts = models.IntegerField(null=True)
    ExtraPointPassingConversions = models.IntegerField(null=True)
    ExtraPointRushingAttempts = models.IntegerField(null=True)
    ExtraPointRushingConversions = models.IntegerField(null=True)
    FieldGoalAttempts = models.IntegerField(null=True)
    FieldGoalsMade = models.IntegerField(null=True)
    FieldGoalsHadBlocked = models.IntegerField(null=True)
    PuntReturns = models.IntegerField(null=True)
    PuntReturnYards = models.IntegerField(null=True)
    KickReturns = models.IntegerField(null=True)
    KickReturnYards = models.IntegerField(null=True)
    InterceptionReturns = models.IntegerField(null=True)
    InterceptionReturnYards = models.IntegerField(null=True)
    OpponentKickoffs = models.IntegerField(null=True)
    OpponentKickoffsInEndZone = models.IntegerField(null=True)
    OpponentKickoffTouchbacks = models.IntegerField(null=True)
    OpponentPuntsHadBlocked = models.IntegerField(null=True)
    OpponentPuntNetAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentExtraPointKickingAttempts = models.IntegerField(null=True)
    OpponentExtraPointKickingConversions = models.IntegerField(null=True)
    OpponentExtraPointsHadBlocked = models.IntegerField(null=True)
    OpponentExtraPointPassingAttempts = models.IntegerField(null=True)
    OpponentExtraPointPassingConversions = models.IntegerField(null=True)
    OpponentExtraPointRushingAttempts = models.IntegerField(null=True)
    OpponentExtraPointRushingConversions = models.IntegerField(null=True)
    OpponentFieldGoalAttempts = models.IntegerField(null=True)
    OpponentFieldGoalsMade = models.IntegerField(null=True)
    OpponentFieldGoalsHadBlocked = models.IntegerField(null=True)
    OpponentPuntReturns = models.IntegerField(null=True)
    OpponentPuntReturnYards = models.IntegerField(null=True)
    OpponentKickReturns = models.IntegerField(null=True)
    OpponentKickReturnYards = models.IntegerField(null=True)
    OpponentInterceptionReturns = models.IntegerField(null=True)
    OpponentInterceptionReturnYards = models.IntegerField(null=True)
    SoloTackles = models.IntegerField(null=True)
    AssistedTackles = models.IntegerField(null=True)
    Sacks = models.IntegerField(null=True)
    SackYards = models.IntegerField(null=True)
    PassesDefended = models.IntegerField(null=True)
    FumblesForced = models.IntegerField(null=True)
    FumblesRecovered = models.IntegerField(null=True)
    FumbleReturnYards = models.IntegerField(null=True)
    FumbleReturnTouchdowns = models.IntegerField(null=True)
    InterceptionReturnTouchdowns = models.IntegerField(null=True)
    BlockedKicks = models.IntegerField(null=True)
    PuntReturnTouchdowns = models.IntegerField(null=True)
    PuntReturnLong = models.IntegerField(null=True)
    KickReturnTouchdowns = models.IntegerField(null=True)
    KickReturnLong = models.IntegerField(null=True)
    BlockedKickReturnYards = models.IntegerField(null=True)
    BlockedKickReturnTouchdowns = models.IntegerField(null=True)
    FieldGoalReturnYards = models.IntegerField(null=True)
    FieldGoalReturnTouchdowns = models.IntegerField(null=True)
    PuntNetYards = models.IntegerField(null=True)
    OpponentSoloTackles = models.IntegerField(null=True)
    OpponentAssistedTackles = models.IntegerField(null=True)
    OpponentSacks = models.IntegerField(null=True)
    OpponentSackYards = models.IntegerField(null=True)
    OpponentPassesDefended = models.IntegerField(null=True)
    OpponentFumblesForced = models.IntegerField(null=True)
    OpponentFumblesRecovered = models.IntegerField(null=True)
    OpponentFumbleReturnYards = models.IntegerField(null=True)
    OpponentFumbleReturnTouchdowns = models.IntegerField(null=True)
    OpponentInterceptionReturnTouchdowns = models.IntegerField(null=True)
    OpponentBlockedKicks = models.IntegerField(null=True)
    OpponentPuntReturnTouchdowns = models.IntegerField(null=True)
    OpponentPuntReturnLong = models.IntegerField(null=True)
    OpponentKickReturnTouchdowns = models.IntegerField(null=True)
    OpponentKickReturnLong = models.IntegerField(null=True)
    OpponentBlockedKickReturnYards = models.IntegerField(null=True)
    OpponentBlockedKickReturnTouchdowns = models.IntegerField(null=True)
    OpponentFieldGoalReturnYards = models.IntegerField(null=True)
    OpponentFieldGoalReturnTouchdowns = models.IntegerField(null=True)
    OpponentPuntNetYards = models.IntegerField(null=True)
    TeamName = models.CharField(max_length=50, null=True, blank=True)
    Games = models.IntegerField(null=True)
    PassingDropbacks = models.IntegerField(null=True)
    OpponentPassingDropbacks = models.IntegerField(null=True)
    TeamSeasonID = models.IntegerField(primary_key=True)
    PointDifferential = models.IntegerField(null=True)
    PassingInterceptionPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    KickReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentPassingInterceptionPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentPuntReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentKickReturnAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentExtraPointPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OpponentFieldGoalPercentage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PenaltyYardDifferential = models.IntegerField(null=True)
    PuntReturnYardDifferential = models.IntegerField(null=True)
    KickReturnYardDifferential = models.IntegerField(null=True)
    TwoPointConversionReturns = models.IntegerField(null=True)
    OpponentTwoPointConversionReturns = models.IntegerField(null=True)
    TeamID = models.IntegerField(null=True)
    GlobalTeamID = models.IntegerField(null=True)
    TeamStatID = models.IntegerField()

class Standing(models.Model):
    Team = models.CharField(max_length=50, primary_key=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Conference = models.CharField(max_length=50, null=True, blank=True)
    Division = models.CharField(max_length=50, null=True, blank=True)
    Name = models.CharField(max_length=50, null=True, blank=True)
    Wins = models.IntegerField()
    Losses = models.IntegerField()
    Ties = models.IntegerField()
    Percentage = models.DecimalField(max_digits=10, decimal_places=2)
    PointsFor = models.IntegerField()
    PointsAgainst = models.IntegerField()
    NetPoints = models.IntegerField()
    Touchdowns = models.IntegerField(null=True)
    DivisionWins = models.IntegerField()
    DivisionLosses = models.IntegerField()
    ConferenceWins = models.IntegerField()
    ConferenceLosses = models.IntegerField()
    TeamID = models.IntegerField()
    DivisionTies = models.IntegerField()
    ConferenceTies = models.IntegerField()
    GlobalTeamID = models.IntegerField(null=True)
    DivisionRank = models.IntegerField()
    ConferenceRank = models.IntegerField()

#excluding fantasyplayer, may all be here

class PlayerDetail(models.Model):
    PlayerID = models.IntegerField(primary_key=True)
    PlayerSeason = models.IntegerField(null=True)
    Team = models.CharField(max_length=10, null=True, blank=True)
    Number = models.IntegerField(null=True)
    FirstName = models.CharField(max_length=50, null=True, blank=True)
    LastName = models.CharField(max_length=50, null=True, blank=True)
    Position = models.CharField(max_length=10, null=True, blank=True)
    Status = models.CharField(max_length=50, null=True, blank=True)
    Height = models.CharField(max_length=50, null=True, blank=True)
    Weight = models.IntegerField(null=True)
    BirthDate = models.DateTimeField(null=True)
    College = models.CharField(max_length=50, null=True, blank=True)
    Experience = models.IntegerField(null=True)
    FantasyPosition = models.CharField(max_length=10, null=True, blank=True)
    Active = models.BooleanField(null=True)
    PositionCategory = models.CharField(max_length=3, null=True, blank=True)
    Name = models.CharField(max_length=50, null=True, blank=True)
    Age = models.IntegerField(null=True)
    ExperienceString = models.CharField(max_length=50, null=True, blank=True)
    BirthDateString = models.CharField(max_length=50, null=True, blank=True)
    PhotoUrl = models.CharField(max_length=250, null=True, blank=True)
    ByeWeek = models.IntegerField(null=True)
    UpcomingGameOpponent = models.CharField(max_length=50, null=True, blank=True)
    UpcomingGameWeek = models.IntegerField()
    ShortName = models.CharField(max_length=50, null=True, blank=True)
    AverageDraftPosition = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    DepthPositionCategory = models.CharField(max_length=3, null=True, blank=True)
    DepthPosition = models.CharField(max_length=10, null=True, blank=True)
    DepthOrder = models.IntegerField(null=True)
    DepthDisplayOrder = models.IntegerField(null=True)
    CurrentTeam = models.CharField(max_length=10, null=True, blank=True)
    CollegeDraftTeam = models.CharField(max_length=10, null=True, blank=True)
    CollegeDraftYear = models.IntegerField(null=True)
    CollegeDraftRound = models.IntegerField(null=True)
    CollegeDraftPick = models.IntegerField(null=True)
    IsUndraftedFreeAgent = models.BooleanField()
    HeightFeet = models.IntegerField(null=True)
    HeightInches = models.IntegerField(null=True)
    UpcomingOpponentRank = models.IntegerField(null=True)
    UpcomingOpponentPositionRank = models.IntegerField(null=True)
    CurrentStatus = models.CharField(max_length=50, null=True, blank=True)
    UpcomingSalary = models.IntegerField(null=True)
    FantasyAlarmPlayerID = models.IntegerField(null=True)
    SportRadarPlayerID = models.CharField(max_length=50, null=True, blank=True)
    RotoworldPlayerID = models.IntegerField(null=True)
    RotoWirePlayerID = models.IntegerField(null=True)
    StatsPlayerID = models.IntegerField(null=True)
    SportsDirectPlayerID = models.IntegerField(null=True)
    XmlTeamPlayerID = models.IntegerField(null=True)
    FanDuelPlayerID = models.IntegerField(null=True)
    DraftKingsPlayerID = models.IntegerField(null=True)
    YahooPlayerID = models.IntegerField(null=True)
    InjuryStatus = models.CharField(max_length=50, null=True, blank=True)
    InjuryBodyPart = models.CharField(max_length=50, null=True, blank=True)
    InjuryStartDate = models.DateTimeField(null=True)
    InjuryNotes = models.CharField(max_length=250, null=True, blank=True)
    FanDuelName = models.CharField(max_length=50, null=True, blank=True)
    DraftKingsName = models.CharField(max_length=50, null=True, blank=True)
    YahooName = models.CharField(max_length=50, null=True, blank=True)
    FantasyPositionDepthOrder = models.IntegerField(null=True)
    InjuryPractice = models.CharField(max_length=10, null=True, blank=True)
    InjuryPracticeDescription = models.CharField(max_length=50, null=True, blank=True)
    DeclaredInactive = models.BooleanField()
    UpcomingFanDuelSalary = models.IntegerField(null=True)
    UpcomingDraftKingsSalary = models.IntegerField(null=True)
    UpcomingYahooSalary = models.IntegerField(null=True)
    TeamID = models.IntegerField(null=True)
    GlobalTeamID = models.IntegerField(null=True)
    FantasyDraftPlayerID = models.IntegerField(null=True)
    FantasyDraftName = models.CharField(max_length=50, null=True, blank=True)
    UsaTodayPlayerID = models.IntegerField(null=True)
    UsaTodayHeadshotUrl = models.CharField(max_length=100, null=True, blank=True)
    UsaTodayHeadshotNoBackgroundUrl = models.CharField(max_length=100, null=True, blank=True)
    UsaTodayHeadshotUpdated = models.DateTimeField(null=True)
    UsaTodayHeadshotNoBackgroundUpdated = models.DateTimeField(null=True)
    class Meta:
        ordering = ['Name']
        indexes = [
            models.Index(fields=['LastName', 'FirstName']),
            models.Index(fields=['LastName']),
            models.Index(fields=['FirstName']),
        ]
    def __str__(self):
        return self.Name + " " + self.Team

class PlayerPersonalContact(models.Model):
    PlayerID = models.ForeignKey(PlayerDetail,primary_key=True, on_delete=models.CASCADE)
    Address = models.CharField(max_length=200, null=True)
    Phone = models.CharField(max_length=20, blank=True, null=True)
    Email = models.CharField(max_length=20, blank=True, null=True)

class PlayerWorkContact(models.Model):
    PlayerID = models.ForeignKey(PlayerDetail, primary_key=True,on_delete=models.CASCADE)
    Address = models.CharField(max_length=200, null=True)
    Phone = models.CharField(max_length=20, blank=True, null=True)
    Email = models.CharField(max_length=20, blank=True, null=True)
    
class PlayerCompanyContact(models.Model):
    PlayerID = models.OneToOneField(PlayerDetail, primary_key=True, on_delete=models.CASCADE)
    Name = models.CharField(max_length=50,default="NA")
    Address = models.CharField(max_length=200, null=True)
    Phone = models.CharField(max_length=20, blank=True, null=True)
    Email = models.CharField(max_length=20, blank=True, null=True)
    
class PlayerRespresentativeContact(models.Model):
    PlayerID = models.OneToOneField(PlayerDetail, primary_key=True, on_delete=models.CASCADE)
    Name = models.CharField(max_length=50,default="NA")
    Address = models.CharField(max_length=200, null=True)
    Phone = models.CharField(max_length=20, blank=True, null=True)
    Email = models.CharField(max_length=20, blank=True, null=True)
    
class PlayerClubContact(models.Model):
    PlayerID = models.OneToOneField(PlayerDetail, primary_key=True, on_delete=models.CASCADE)
    Name = models.CharField(max_length=50,default="NA")
    Address = models.CharField(max_length=200, null=True)
    Phone = models.CharField(max_length=20, blank=True, null=True)
    Email = models.CharField(max_length=20, blank=True, null=True)
    
class PlayerFamilyContact(models.Model):
    PlayerID = models.ForeignKey(PlayerDetail, on_delete=models.CASCADE)
    Name = models.CharField(max_length=50,default="NA")
    Relationship = models.CharField(max_length=50,default="NA")
    Number = models.CharField(max_length=20,default="NA")
    Email = models.CharField(max_length=50,default="NA")

    
class PlayerMerchDesigner(models.Model):
    PlayerID = models.OneToOneField(PlayerDetail, primary_key=True, on_delete=models.CASCADE)
    Address = models.CharField(max_length=200, null=True)
    Phone = models.CharField(max_length=20, blank=True, null=True)
    Email = models.CharField(max_length=20, blank=True, null=True)
    

class Injury(models.Model):
    InjuryID = models.IntegerField(primary_key=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Week = models.IntegerField()
    PlayerID = models.IntegerField()
    Name = models.CharField(max_length=50, null=True, blank=True)
    Position = models.CharField(max_length=50, null=True, blank=True)
    Number = models.IntegerField()
    Team = models.CharField(max_length=50, null=True, blank=True)
    Opponent = models.CharField(max_length=50, null=True, blank=True)
    BodyPart = models.CharField(max_length=50, null=True, blank=True)
    Status = models.CharField(max_length=50, null=True, blank=True)
    Practice = models.CharField(max_length=50, null=True, blank=True)
    PracticeDescription = models.CharField(max_length=50, null=True, blank=True)
    Updated = models.DateTimeField()
    DeclaredInactive = models.BooleanField(null=True)
    TeamID = models.IntegerField(null=True)
    OpponentID = models.IntegerField(null=True)

class PlayerGame(models.Model):
    GameKey = models.CharField(max_length=10)
    PlayerID = models.IntegerField(null=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    GameDate = models.DateTimeField()
    Week = models.IntegerField()
    Team = models.CharField(max_length=50, null=True, blank=True)
    Opponent = models.CharField(max_length=50, null=True, blank=True)
    HomeOrAway = models.CharField(max_length=4, null=True, blank=True)
    Number = models.IntegerField()
    Name = models.CharField(max_length=50, null=True, blank=True)
    Position = models.CharField(max_length=50, null=True, blank=True)
    PositionCategory = models.CharField(max_length=50, null=True, blank=True)
    Activated = models.IntegerField()
    Played = models.IntegerField()
    Started = models.IntegerField()
    PassingAttempts = models.DecimalField(max_digits=10, decimal_places=2)
    PassingCompletions = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYards = models.DecimalField(max_digits=10, decimal_places=2)
    PassingCompletionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYardsPerCompletion = models.DecimalField(max_digits=10, decimal_places=2)
    PassingTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    PassingInterceptions = models.DecimalField(max_digits=10, decimal_places=2)
    PassingRating = models.DecimalField(max_digits=10, decimal_places=2)
    PassingLong = models.DecimalField(max_digits=10, decimal_places=2)
    PassingSacks = models.DecimalField(max_digits=10, decimal_places=2)
    PassingSackYards = models.DecimalField(max_digits=10, decimal_places=2)
    RushingAttempts = models.DecimalField(max_digits=10, decimal_places=2)
    RushingYards = models.DecimalField(max_digits=10, decimal_places=2)
    RushingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    RushingTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    RushingLong = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingTargets = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Receptions = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingYards = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingYardsPerReception = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingLong = models.DecimalField(max_digits=10, decimal_places=2)
    Fumbles = models.DecimalField(max_digits=10, decimal_places=2)
    FumblesLost = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntReturns = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnLong = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturns = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnLong = models.DecimalField(max_digits=10, decimal_places=2)
    SoloTackles = models.DecimalField(max_digits=10, decimal_places=2)
    AssistedTackles = models.DecimalField(max_digits=10, decimal_places=2)
    TacklesForLoss = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Sacks = models.DecimalField(max_digits=10, decimal_places=2)
    SackYards = models.DecimalField(max_digits=10, decimal_places=2)
    QuarterbackHits = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PassesDefended = models.DecimalField(max_digits=10, decimal_places=2)
    FumblesForced = models.DecimalField(max_digits=10, decimal_places=2)
    FumblesRecovered = models.DecimalField(max_digits=10, decimal_places=2)
    FumbleReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    FumbleReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    Interceptions = models.DecimalField(max_digits=10, decimal_places=2)
    InterceptionReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    InterceptionReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    BlockedKicks = models.DecimalField(max_digits=10, decimal_places=2)
    SpecialTeamsSoloTackles = models.DecimalField(max_digits=10, decimal_places=2)
    SpecialTeamsAssistedTackles = models.DecimalField(max_digits=10, decimal_places=2)
    MiscSoloTackles = models.DecimalField(max_digits=10, decimal_places=2)
    MiscAssistedTackles = models.DecimalField(max_digits=10, decimal_places=2)
    Punts = models.DecimalField(max_digits=10, decimal_places=2)
    PuntYards = models.DecimalField(max_digits=10, decimal_places=2)
    PuntAverage = models.DecimalField(max_digits=10, decimal_places=2)
    FieldGoalsAttempted = models.DecimalField(max_digits=10, decimal_places=2)
    FieldGoalsMade = models.DecimalField(max_digits=10, decimal_places=2)
    FieldGoalsLongestMade = models.DecimalField(max_digits=10, decimal_places=2)
    ExtraPointsMade = models.DecimalField(max_digits=10, decimal_places=2)
    TwoPointConversionPasses = models.DecimalField(max_digits=10, decimal_places=2)
    TwoPointConversionRuns = models.DecimalField(max_digits=10, decimal_places=2)
    TwoPointConversionReceptions = models.DecimalField(max_digits=10, decimal_places=2)
    FantasyPoints = models.DecimalField(max_digits=10, decimal_places=2)
    FantasyPointsPPR = models.DecimalField(max_digits=10, decimal_places=2)
    ReceptionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingYardsPerTarget = models.DecimalField(max_digits=10, decimal_places=2)
    Tackles = models.DecimalField(max_digits=10, decimal_places=2)
    OffensiveTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    DefensiveTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    SpecialTeamsTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    Touchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    FantasyPosition = models.CharField(max_length=50, null=True, blank=True)
    FieldGoalPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    PlayerGameID = models.IntegerField(primary_key=True)
    FumblesOwnRecoveries = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FumblesOutOfBounds = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    KickReturnFairCatches = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntReturnFairCatches = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntTouchbacks = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntInside20 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntNetAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointsAttempted = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    BlockedKickReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Safeties = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsHadBlocked = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntsHadBlocked = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointsHadBlocked = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntLong = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    BlockedKickReturnYards = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalReturnYards = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntNetYards = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    SpecialTeamsFumblesForced = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    SpecialTeamsFumblesRecovered = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    MiscFumblesForced = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    MiscFumblesRecovered = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ShortName = models.CharField(max_length=50, null=True, blank=True)
    PlayingSurface = models.CharField(max_length=50, null=True, blank=True)
    IsGameOver = models.BooleanField(null=True)
    SafetiesAllowed = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Stadium = models.CharField(max_length=50, null=True, blank=True)
    Temperature = models.IntegerField(null=True)
    Humidity = models.IntegerField(null=True)
    WindSpeed = models.IntegerField(null=True)
    FanDuelSalary = models.IntegerField(null=True)
    DraftKingsSalary = models.IntegerField(null=True)
    FantasyDataSalary = models.IntegerField(null=True)
    OffensiveSnapsPlayed = models.IntegerField(null=True)
    DefensiveSnapsPlayed = models.IntegerField(null=True)
    SpecialTeamsSnapsPlayed = models.IntegerField(null=True)
    OffensiveTeamSnaps = models.IntegerField(null=True)
    DefensiveTeamSnaps = models.IntegerField(null=True)
    SpecialTeamsTeamSnaps = models.IntegerField(null=True)
    VictivSalary = models.IntegerField(null=True)
    TwoPointConversionReturns = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FantasyPointsFanDuel = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade0to19 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade20to29 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade30to39 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade40to49 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade50Plus = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FantasyPointsDraftKings = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    YahooSalary = models.IntegerField(null=True)
    FantasyPointsYahoo = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    InjuryStatus = models.CharField(max_length=50, null=True, blank=True)
    InjuryBodyPart = models.CharField(max_length=50, null=True, blank=True)
    InjuryStartDate = models.DateTimeField(null=True)
    InjuryNotes = models.CharField(max_length=250, null=True, blank=True)
    FanDuelPosition = models.CharField(max_length=10, null=True, blank=True)
    DraftKingsPosition = models.CharField(max_length=10, null=True, blank=True)
    YahooPosition = models.CharField(max_length=10, null=True, blank=True)
    OpponentRank = models.IntegerField(null=True)
    OpponentPositionRank = models.IntegerField(null=True)
    InjuryPractice = models.CharField(max_length=10, null=True, blank=True)
    InjuryPracticeDescription = models.CharField(max_length=50, null=True, blank=True)
    DeclaredInactive = models.BooleanField()
    FantasyDraftSalary = models.IntegerField(null=True)
    FantasyDraftPosition = models.CharField(max_length=10, null=True, blank=True)
    TeamID = models.IntegerField(null=True)
    OpponentID = models.IntegerField(null=True)
    Day = models.DateField(null=True)
    DateTime = models.DateTimeField(null=True)
    GlobalGameID = models.IntegerField(null=True)
    GlobalTeamID = models.IntegerField(null=True)
    GlobalOpponentID = models.IntegerField(null=True)
    ScoreID = models.IntegerField()
    FantasyPointsFantasyDraft = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OffensiveFumbleRecoveryTouchdowns = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    SnapCountsConfirmed = models.BooleanField(null=True)



class PlayerSeason(models.Model):
    PlayerID = models.IntegerField(null=True)
    SeasonType = models.IntegerField()
    Season = models.IntegerField()
    Team = models.CharField(max_length=50, null=True, blank=True)
    Number = models.IntegerField()
    Name = models.CharField(max_length=50, null=True, blank=True)
    Position = models.CharField(max_length=50, null=True, blank=True)
    PositionCategory = models.CharField(max_length=50, null=True, blank=True)
    Activated = models.IntegerField()
    Played = models.IntegerField()
    Started = models.IntegerField()
    PassingAttempts = models.DecimalField(max_digits=10, decimal_places=2)
    PassingCompletions = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYards = models.DecimalField(max_digits=10, decimal_places=2)
    PassingCompletionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    PassingYardsPerCompletion = models.DecimalField(max_digits=10, decimal_places=2)
    PassingTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    PassingInterceptions = models.DecimalField(max_digits=10, decimal_places=2)
    PassingRating = models.DecimalField(max_digits=10, decimal_places=2)
    PassingLong = models.DecimalField(max_digits=10, decimal_places=2)
    PassingSacks = models.DecimalField(max_digits=10, decimal_places=2)
    PassingSackYards = models.DecimalField(max_digits=10, decimal_places=2)
    RushingAttempts = models.DecimalField(max_digits=10, decimal_places=2)
    RushingYards = models.DecimalField(max_digits=10, decimal_places=2)
    RushingYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    RushingTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    RushingLong = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingTargets = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Receptions = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingYards = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingYardsPerReception = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingLong = models.DecimalField(max_digits=10, decimal_places=2)
    Fumbles = models.DecimalField(max_digits=10, decimal_places=2)
    FumblesLost = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntReturns = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    PuntReturnLong = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturns = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnYardsPerAttempt = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    KickReturnLong = models.DecimalField(max_digits=10, decimal_places=2)
    SoloTackles = models.DecimalField(max_digits=10, decimal_places=2)
    AssistedTackles = models.DecimalField(max_digits=10, decimal_places=2)
    TacklesForLoss = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Sacks = models.DecimalField(max_digits=10, decimal_places=2)
    SackYards = models.DecimalField(max_digits=10, decimal_places=2)
    QuarterbackHits = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PassesDefended = models.DecimalField(max_digits=10, decimal_places=2)
    FumblesForced = models.DecimalField(max_digits=10, decimal_places=2)
    FumblesRecovered = models.DecimalField(max_digits=10, decimal_places=2)
    FumbleReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    FumbleReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    Interceptions = models.DecimalField(max_digits=10, decimal_places=2)
    InterceptionReturnYards = models.DecimalField(max_digits=10, decimal_places=2)
    InterceptionReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    BlockedKicks = models.DecimalField(max_digits=10, decimal_places=2)
    SpecialTeamsSoloTackles = models.DecimalField(max_digits=10, decimal_places=2)
    SpecialTeamsAssistedTackles = models.DecimalField(max_digits=10, decimal_places=2)
    MiscSoloTackles = models.DecimalField(max_digits=10, decimal_places=2)
    MiscAssistedTackles = models.DecimalField(max_digits=10, decimal_places=2)
    Punts = models.DecimalField(max_digits=10, decimal_places=2)
    PuntYards = models.DecimalField(max_digits=10, decimal_places=2)
    PuntAverage = models.DecimalField(max_digits=10, decimal_places=2)
    FieldGoalsAttempted = models.DecimalField(max_digits=10, decimal_places=2)
    FieldGoalsMade = models.DecimalField(max_digits=10, decimal_places=2)
    FieldGoalsLongestMade = models.DecimalField(max_digits=10, decimal_places=2)
    ExtraPointsMade = models.DecimalField(max_digits=10, decimal_places=2)
    TwoPointConversionPasses = models.DecimalField(max_digits=10, decimal_places=2)
    TwoPointConversionRuns = models.DecimalField(max_digits=10, decimal_places=2)
    TwoPointConversionReceptions = models.DecimalField(max_digits=10, decimal_places=2)
    FantasyPoints = models.DecimalField(max_digits=10, decimal_places=2)
    FantasyPointsPPR = models.DecimalField(max_digits=10, decimal_places=2)
    ReceptionPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    ReceivingYardsPerTarget = models.DecimalField(max_digits=10, decimal_places=2)
    Tackles = models.DecimalField(max_digits=10, decimal_places=2)
    OffensiveTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    DefensiveTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    SpecialTeamsTouchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    Touchdowns = models.DecimalField(max_digits=10, decimal_places=2)
    FantasyPosition = models.CharField(max_length=50, null=True, blank=True)
    FieldGoalPercentage = models.DecimalField(max_digits=10, decimal_places=2)
    PlayerSeasonID = models.IntegerField(primary_key=True)
    FumblesOwnRecoveries = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FumblesOutOfBounds = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    KickReturnFairCatches = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntReturnFairCatches = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntTouchbacks = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntInside20 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntNetAverage = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointsAttempted = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    BlockedKickReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalReturnTouchdowns = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Safeties = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsHadBlocked = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntsHadBlocked = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ExtraPointsHadBlocked = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntLong = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    BlockedKickReturnYards = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalReturnYards = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PuntNetYards = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    SpecialTeamsFumblesForced = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    SpecialTeamsFumblesRecovered = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    MiscFumblesForced = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    MiscFumblesRecovered = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    ShortName = models.CharField(max_length=50, null=True, blank=True)
    SafetiesAllowed = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    Temperature = models.IntegerField(null=True)
    Humidity = models.IntegerField(null=True)
    WindSpeed = models.IntegerField(null=True)
    OffensiveSnapsPlayed = models.IntegerField(null=True)
    DefensiveSnapsPlayed = models.IntegerField(null=True)
    SpecialTeamsSnapsPlayed = models.IntegerField(null=True)
    OffensiveTeamSnaps = models.IntegerField(null=True)
    DefensiveTeamSnaps = models.IntegerField(null=True)
    SpecialTeamsTeamSnaps = models.IntegerField(null=True)
    AuctionValue = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AuctionValuePPR = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    TwoPointConversionReturns = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FantasyPointsFanDuel = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade0to19 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade20to29 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade30to39 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade40to49 = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FieldGoalsMade50Plus = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FantasyPointsDraftKings = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    FantasyPointsYahoo = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AverageDraftPosition = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AverageDraftPositionPPR = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    TeamID = models.IntegerField(null=True)
    GlobalTeamID = models.IntegerField(null=True)
    FantasyPointsFantasyDraft = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AverageDraftPositionRookie = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AverageDraftPositionDynasty = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    AverageDraftPosition2QB = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    OffensiveFumbleRecoveryTouchdowns = models.IntegerField(null=True)

class ScoringPlay(models.Model):
    GameKey = models.CharField(max_length=10)
    SeasonType = models.IntegerField()
    ScoringPlayID = models.IntegerField(primary_key=True)
    Season = models.IntegerField()
    Week = models.IntegerField()
    AwayTeam = models.CharField(max_length=10)
    HomeTeam = models.CharField(max_length=10)
    Date = models.DateTimeField(null=True)
    Sequence = models.IntegerField(null=True)
    Team = models.CharField(max_length=10, null=True, blank=True)
    Quarter = models.CharField(max_length=10, null=True, blank=True)
    TimeRemaining = models.CharField(max_length=10, null=True, blank=True)
    PlayDescription = models.CharField(max_length=500, null=True, blank=True)
    AwayScore = models.IntegerField(null=True)
    HomeScore = models.IntegerField(null=True)
    ScoreID = models.IntegerField()

class ScoringDetail(models.Model):
    GameKey = models.CharField(max_length=10)
    SeasonType = models.IntegerField()
    PlayerID = models.IntegerField(null=True)
    Team = models.CharField(max_length=50, null=True, blank=True)
    Season = models.IntegerField()
    Week = models.IntegerField()
    ScoringType = models.CharField(max_length=50, null=True, blank=True)
    Length = models.IntegerField()
    ScoringDetailID = models.IntegerField(primary_key=True)
    PlayerGameID = models.IntegerField()
    ScoreID = models.IntegerField(null=True)
    ScoringPlayID = models.IntegerField(null=True)

    #NO FANTASY FOR NOW
   

# NO NEWS FOR NOW

class Quarter(models.Model):
    QuarterID = models.IntegerField(primary_key=True)
    ScoreID = models.IntegerField()
    Number = models.IntegerField()
    Name = models.CharField(max_length=10)
    Description = models.CharField(max_length=20, null=True, blank=True)
    AwayTeamScore = models.IntegerField(null=True)
    HomeTeamScore = models.IntegerField(null=True)
    Updated = models.DateTimeField(null=True)
    Created = models.DateTimeField(null=True)


class Play(models.Model):
    PlayID = models.IntegerField(primary_key=True)
    QuarterID = models.IntegerField()
    QuarterName = models.CharField(max_length=10, null=True, blank=True)
    Sequence = models.IntegerField(null=True)
    TimeRemainingMinutes = models.IntegerField(null=True)
    TimeRemainingSeconds = models.IntegerField(null=True)
    PlayTime = models.DateTimeField(null=True)
    Updated = models.DateTimeField(null=True)
    Created = models.DateTimeField(null=True)
    Team = models.CharField(max_length=10, null=True, blank=True)
    Opponent = models.CharField(max_length=10, null=True, blank=True)
    Down = models.IntegerField(null=True)
    Distance = models.IntegerField(null=True)
    YardLine = models.IntegerField(null=True)
    YardLineTerritory = models.CharField(max_length=10, null=True, blank=True)
    YardsToEndZone = models.IntegerField(null=True)
    Type = models.CharField(max_length=20, null=True, blank=True)
    YardsGained = models.IntegerField(null=True)
    Description = models.CharField(max_length=250, null=True, blank=True)
    IsScoringPlay = models.BooleanField(null=True)
    ScoringPlay = models.IntegerField(null=True)

class PlayStat(models.Model):
    PlayStatID = models.IntegerField(primary_key=True)
    PlayID = models.IntegerField()
    Sequence = models.IntegerField()
    PlayerID = models.IntegerField()
    Name = models.CharField(max_length=50)
    Team = models.CharField(max_length=10)
    Opponent = models.CharField(max_length=10)
    HomeOrAway = models.CharField(max_length=4)
    Direction = models.CharField(max_length=20, null=True, blank=True)
    Updated = models.DateTimeField(null=True)
    Created = models.DateTimeField(null=True)
    PassingAttempts = models.IntegerField(null=True)
    PassingCompletions = models.IntegerField(null=True)
    PassingYards = models.IntegerField(null=True)
    PassingTouchdowns = models.IntegerField(null=True)
    PassingInterceptions = models.IntegerField(null=True)
    PassingSacks = models.IntegerField(null=True)
    PassingSackYards = models.IntegerField(null=True)
    RushingAttempts = models.IntegerField(null=True)
    RushingYards = models.IntegerField(null=True)
    RushingTouchdowns = models.IntegerField(null=True)
    ReceivingTargets = models.IntegerField(null=True)
    Receptions = models.IntegerField(null=True)
    ReceivingYards = models.IntegerField(null=True)
    ReceivingTouchdowns = models.IntegerField(null=True)
    Fumbles = models.IntegerField(null=True)
    FumblesLost = models.IntegerField(null=True)
    TwoPointConversionAttempts = models.IntegerField(null=True)
    TwoPointConversionPasses = models.IntegerField(null=True)
    TwoPointConversionRuns = models.IntegerField(null=True)
    TwoPointConversionReceptions = models.IntegerField(null=True)
    TwoPointConversionReturns = models.IntegerField(null=True)
    SoloTackles = models.IntegerField(null=True)
    AssistedTackles = models.IntegerField(null=True)
    TacklesForLoss = models.IntegerField(null=True)
    Sacks = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    SackYards = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    PassesDefended = models.IntegerField(null=True)
    Safeties = models.IntegerField(null=True)
    FumblesForced = models.IntegerField(null=True)
    FumblesRecovered = models.IntegerField(null=True)
    FumbleReturnYards = models.IntegerField(null=True)
    FumbleReturnTouchdowns = models.IntegerField(null=True)
    Interceptions = models.IntegerField(null=True)
    InterceptionReturnYards = models.IntegerField(null=True)
    InterceptionReturnTouchdowns = models.IntegerField(null=True)
    PuntReturns = models.IntegerField(null=True)
    PuntReturnYards = models.IntegerField(null=True)
    PuntReturnTouchdowns = models.IntegerField(null=True)
    KickReturns = models.IntegerField(null=True)
    KickReturnYards = models.IntegerField(null=True)
    KickReturnTouchdowns = models.IntegerField(null=True)
    BlockedKicks = models.IntegerField(null=True)
    BlockedKickReturns = models.IntegerField(null=True)
    BlockedKickReturnYards = models.IntegerField(null=True)
    BlockedKickReturnTouchdowns = models.IntegerField(null=True)
    FieldGoalReturns = models.IntegerField(null=True)
    FieldGoalReturnYards = models.IntegerField(null=True)
    FieldGoalReturnTouchdowns = models.IntegerField(null=True)
    Kickoffs = models.IntegerField(null=True)
    KickoffYards = models.IntegerField(null=True)
    KickoffTouchbacks = models.IntegerField(null=True)
    Punts = models.IntegerField(null=True)
    PuntYards = models.IntegerField(null=True)
    PuntTouchbacks = models.IntegerField(null=True)
    PuntsHadBlocked = models.IntegerField(null=True)
    FieldGoalsAttempted = models.IntegerField(null=True)
    FieldGoalsMade = models.IntegerField(null=True)
    FieldGoalsYards = models.IntegerField(null=True)
    FieldGoalsHadBlocked = models.IntegerField(null=True)
    ExtraPointsAttempted = models.IntegerField(null=True)
    ExtraPointsMade = models.IntegerField(null=True)
    ExtraPointsHadBlocked = models.IntegerField(null=True)
    Penalties = models.IntegerField(null=True)
    PenaltyYards = models.IntegerField(null=True)
  
class DepthChart(models.Model):
    DepthChartID = models.IntegerField(primary_key=True)
    TeamID = models.IntegerField()
    PlayerID = models.IntegerField(null=True)
    Name = models.CharField(max_length=32, null=True, blank=True)
    PositionCategory = models.CharField(max_length=32, null=True, blank=True)
    Position = models.CharField(max_length=32, null=True, blank=True)
    DepthOrder = models.IntegerField(null=True)
    Updated = models.DateTimeField(null=True)

class TeamDepthChart(models.Model):
    TeamID = models.IntegerField(primary_key=True)
    Offense = models.IntegerField(null=True) #DepthChartID
    Defense = models.IntegerField(null=True) #DepthChartID
    SpecialTeams = models.IntegerField(null=True) #DepthChartID

#user data


class UserInfo(models.Model):
    UserId = models.IntegerField()
    Name = models.CharField(max_length=255)
    Group = models.IntegerField()

class GroupInfo(models.Model):
    Name = models.CharField(max_length=255)


#contact
class ContactCategoryConstants(Enum):
    NFLPLAYER = 'nflpl'
    NFLTEAM = 'nfltm'
    ORGANIZATION = 'org'
    INDIVIDUAL = 'ind'
    COLLEGETEAM = 'cfbtm'

def get_contact_category_choices():
    return {(i, i): i for i in ContactCategoryConstants}

class Contact(models.Model):
    Name = models.CharField(max_length=100, null=True, blank=True)
    Description = models.CharField(max_length=255, blank=True, null=True)
    Private = models.IntegerField(default=True)
    Category = models.CharField(max_length=5)
    DataID = models.IntegerField(null = True)
    Owner = models.IntegerField(null = True)
    class Meta:
        ordering = ['Name']
        indexes = [
            models.Index(fields=['Owner']),
            models.Index(fields=['Category']),
        ]
    def __str__(self):
        return self.Name + " " + self.Category;

class SubContact(models.Model):
    Contact = models.ForeignKey(Contact, related_name="SubContacts", on_delete=models.CASCADE)
    Primary = models.BooleanField()
    Name = models.CharField(max_length=255)
    Description = models.CharField(max_length=255, blank=True, null=True)

class Address(models.Model):
    OwnerId = models.ForeignKey(SubContact, related_name="Addresses", on_delete=models.CASCADE)
    Name = models.CharField(max_length=100, blank=True, null=True)
    Line1  = models.CharField(max_length=100, blank=True, null=True)
    Line2  = models.CharField(max_length=100, blank=True, null=True)
    Line3  = models.CharField(max_length=100, blank=True, null=True)
    City  = models.CharField(max_length=100, blank=True, null=True)
    State = models.CharField(max_length=100, blank=True, null=True)
    PostalCode = models.CharField(max_length=100, blank=True, null=True)
    Country = models.CharField(max_length=100, blank=True, null=True)

class PhoneNumber(models.Model):
    OwnerId = models.ForeignKey(SubContact, related_name="PhoneNumbers", on_delete=models.CASCADE)
    Name = models.CharField(max_length=100, blank=True, null=True)
    Number = models.CharField(max_length=20, blank=True, null=True)

class OtherDetail(models.Model):
    OwnerId = models.ForeignKey(SubContact, related_name="OtherDetails", on_delete=models.CASCADE)
    Name = models.CharField(max_length=100, blank=True, null=True)
    OtherType = models.CharField(max_length=20, blank=True, null=True)
    Text = models.CharField(max_length=100, blank=True, null=True)

class NFLTeamContactInfo(models.Model): 
    TeamID = models.IntegerField(primary_key=True)
    Key = models.CharField(max_length=3)
    Name = models.CharField(max_length=100)
    Mascot = models.CharField(max_length=100)
    Conference = models.CharField(max_length=100)
    StadiumName = models.CharField(max_length=100)
    Address = models.CharField(max_length=100)
    City = models.CharField(max_length=100)
    State = models.CharField(max_length=10, null=True, blank=True)
    PostalCode = models.CharField(max_length=10) 
    Website = models.CharField(max_length=100)
    Instagram = models.CharField(max_length=100)
    Twitter = models.CharField(max_length=100)

class NCAAFTeamContactInfo(models.Model):
    TeamID = models.IntegerField(primary_key=True)
    Name = models.CharField(max_length=100)
    Acronym = models.CharField(max_length=100)
    Conference = models.CharField(max_length=100)
    StadiumName = models.CharField(max_length=100)
    Address = models.CharField(max_length=100)
    City = models.CharField(max_length=100)
    State = models.CharField(max_length=10, null=True, blank=True)
    PostalCode = models.CharField(max_length=10) 
    Website = models.CharField(max_length=100)
    Instagram = models.CharField(max_length=100)
    Twitter = models.CharField(max_length=100)

class TestTable(models.Model):
    ID = models.IntegerField(primary_key=True)
    Text = models.CharField(max_length=100)

    
class NCAAFPlayer(models.Model):
   PlayerID =  models.AutoField(primary_key=True)
   FirstName = models.CharField(max_length=100, null=True, blank=True)
   LastName = models.CharField(max_length=100, null=True, blank=True)
   TeamID = models.IntegerField(default = 0, null=True)
   Team = models.CharField(max_length=100, null=True, blank=True)
   Jersey = models.IntegerField(default = 0, null=True)
   Position = models.CharField(max_length=100, null=True, blank=True)
   PositionCategory = models.CharField(max_length=100, null=True, blank=True)
   Class = models.CharField(max_length=100, null=True, blank=True)
   Height = models.IntegerField(default = 0, null=True)
   Weight = models.IntegerField(default = 0, null=True)
   BirthCity = models.CharField(max_length=100, null=True, blank=True)
   BirthState = models.CharField(max_length=100, null=True, blank=True)
   Updated = models.CharField(max_length=100, null=True, blank=True)
   Created = models.CharField(max_length=100, null=True, blank=True)
   GlobalTeamID = models.IntegerField(default = 0, null=True)


class NCAAFTeam(models.Model):
    TeamID =  models.AutoField(primary_key=True)
    Key = models.CharField(max_length=10, null=True, blank=True)
    Active = models.BooleanField(default=True)
    School = models.CharField(max_length=100, null=True, blank=True)
    Name = models.CharField(max_length=100, null=True, blank=True)
    StadiumID = models.CharField(max_length=100, null=True, blank=True)
    GlobalTeamID = models.CharField(max_length=100, null=True, blank=True)
    TeamLogoUrl = models.CharField(max_length=100, null=True, blank=True)
    ConferenceID = models.CharField(max_length=100, null=True, blank=True)
    Conference = models.CharField(max_length=100, null=True, blank=True)
    ShortDisplayName = models.CharField(max_length=100, null=True, blank=True)
    
